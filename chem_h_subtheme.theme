<?php
/**
 * @file
 * Preprocess functions for chem_h.
 */

/**
 * Prepares variables for the html.html.twig template.
 */
function chem_h_subtheme_preprocess_html(&$variables) {
  \Drupal::service('extension.list.theme')->getPath('stanford_basic');

  $twittercard = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'twitter:card',
      'content' => 'summary_large_image',
    ],
  ];

  $twittersite = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'twitter:site',
      'content' => '@Stanford_ChEMH',
    ],
  ];

  $twittercreator = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'twitter:creator',
      'content' => '@Stanford_ChEMH',
    ],
  ];

  $twittertitle = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'twitter:title',
      'content' => 'Sarafan ChEM-H',
    ],
  ];

  $twitterdesc = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'twitter:description',
      'content' => 'Bridging chemistry, engineering, biology, and medicine to improve human health',
    ],
  ];

  $twitterimg = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'twitter:image',
      'content' => 'https://chemh.stanford.edu/sites/g/files/sbiybj25016/files/styles/breakpoint_2xl_2x/public/media/image/building_dedication_0.jpg?itok=PZmd5ipP',
    ],
  ];

  // Is front page variable
  // set the front variable to add meta tags to on the homepage.
  if (\Drupal::service('path.matcher')->isFrontPage()) {
    $variables['page']['#attached']['html_head'][] = [$twittercard, 'twitter:card'];
    $variables['page']['#attached']['html_head'][] = [$twittersite, 'twitter:site'];
    $variables['page']['#attached']['html_head'][] = [$twittercreator, 'twitter:creator'];
    $variables['page']['#attached']['html_head'][] = [$twittertitle, 'twitter:title'];
    $variables['page']['#attached']['html_head'][] = [$twitterdesc, 'twitter:description'];
    $variables['page']['#attached']['html_head'][] = [$twitterimg, 'twitter:image'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function chem_h_subtheme_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (!empty($variables['elements']['#id']) && $variables['elements']['#id'] == 'chem_h_subtheme_search') {
    $suggestions[] = 'block__stanford_basic_search';
  }
}


/**
 * Implements hook_preprocess_HOOK().
 */
function chem_h_subtheme_preprocess_ds_entity_view(&$variables) {

  // if not running on a paragraph, exit out.
  if (!isset($variables['content']['#paragraph'])) {
    return;
  }

  $paragraph = $variables['content']['#paragraph'];

  // Process Cards
  if ($paragraph->bundle() == 'stanford_card') {
    chem_h_subtheme_preprocess_card($variables);
  }

  // Process Banners
  if ($paragraph->bundle() == 'stanford_banner') {
    chem_h_subtheme_preprocess_banner($variables);
  }
}


/**
 * Implements hook_preprocess_card().
 */
function chem_h_subtheme_preprocess_card(&$variables) {

  $paragraph = $variables['content']['#paragraph'];

  // Add border style class to card wrapper.
  $variables['attributes']['class'][] = $paragraph->getBehaviorSetting('react_paragraphs:card_variant_info', 'card_border_style', 'su-card-wrapper--border-regular');

  // Add button color style class to card wrapper.
  $variables['attributes']['class'][] = $paragraph->getBehaviorSetting('react_paragraphs:card_variant_info', 'card_button_style', 'su-wrapper--button-red');

  $card_info = [];

  // Add card type class to card wrapper. 3rd variable provides the default card type.
  $card_info['card_type'] = $paragraph->getBehaviorSetting('react_paragraphs:card_variant_info', 'card_type', 'su-card-wrapper--default');
  $variables['attributes']['class'][] = $card_info['card_type'];

  $imageCount = $paragraph->get('su_card_media')->count();

  // Check for media in a card then set classes.
  if (!$imageCount) {
    return;
  }
}

/**
 * Implements hook_preprocess_banner().
 */
function chem_h_subtheme_preprocess_banner(&$variables) {

  $paragraph = $variables['content']['#paragraph'];

  // Add button color style class to card wrapper.
  $variables['attributes']['class'][] = $paragraph->getBehaviorSetting('react_paragraphs:banner_variant_info', 'banner_button_style', 'su-wrapper--button-red');
}

