<?php
/**
 * @file
 * Preprocess functions for chem_h.
 */

use Drupal\ui_patterns\Element\PatternContext;
use Drupal\node\NodeInterface;

/**
 * Implements hook_preprocess().
 */
function chem_h_subtheme_preprocess(&$variables, $hook) {
  if ($hook === 'pattern_news-vertical-teaser') {
    $variables['use'] = '@chemh_subtheme/news-vertical-teaser/news-vertical-teaser.html.twig';
  }
}

/**
 * Prepares variables for the html.html.twig template.
 */
function chem_h_subtheme_preprocess_html(&$variables) {
  $variables['stanford_basic_path'] = \Drupal::service('extension.list.theme')
    ->getPath('stanford_basic');

  $twittercard = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'twitter:card',
      'content' => 'summary_large_image',
    ],
  ];

  $twittersite = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'twitter:site',
      'content' => '@Stanford_ChEMH',
    ],
  ];

  $twittercreator = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'twitter:creator',
      'content' => '@Stanford_ChEMH',
    ],
  ];

  $twittertitle = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'twitter:title',
      'content' => 'Sarafan ChEM-H',
    ],
  ];

  $twitterdesc = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'twitter:description',
      'content' => 'Bridging chemistry, engineering, biology, and medicine to improve human health',
    ],
  ];

  $twitterimg = [
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'twitter:image',
      'content' => 'https://chemh.stanford.edu/sites/g/files/sbiybj25016/files/styles/breakpoint_2xl_2x/public/media/image/building_dedication_0.jpg?itok=PZmd5ipP',
    ],
  ];

  // Is front page variable
  // set the front variable to add meta tags to on the homepage.
  if (\Drupal::service('path.matcher')->isFrontPage()) {
    $variables['page']['#attached']['html_head'][] = [$twittercard, 'twitter:card'];
    $variables['page']['#attached']['html_head'][] = [$twittersite, 'twitter:site'];
    $variables['page']['#attached']['html_head'][] = [$twittercreator, 'twitter:creator'];
    $variables['page']['#attached']['html_head'][] = [$twittertitle, 'twitter:title'];
    $variables['page']['#attached']['html_head'][] = [$twitterdesc, 'twitter:description'];
    $variables['page']['#attached']['html_head'][] = [$twitterimg, 'twitter:image'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function chem_h_subtheme_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (!empty($variables['elements']['#id']) && $variables['elements']['#id'] == 'chem_h_subtheme_search') {
    $suggestions[] = 'block__stanford_basic_search';
  }
}

function chem_h_subtheme_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#view_id'])) {
    $suggestions[] = 'form__' . $variables['element']['#view_id'];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function chem_h_subtheme_preprocess_ds_entity_view(&$variables) {
  // if not running on a paragraph, exit out.
  if (!isset($variables['content']['#paragraph'])) {
    return;
  }

  $paragraph = $variables['content']['#paragraph'];

  // Process Cards
  if ($paragraph->bundle() == 'stanford_card') {
    chem_h_subtheme_preprocess_card($variables);
  }

  // Process Banners
  if ($paragraph->bundle() == 'stanford_banner') {
    chem_h_subtheme_preprocess_banner($variables);
  }
}


/**
 * Implements hook_preprocess_card().
 */
function chem_h_subtheme_preprocess_card(&$variables) {

  $paragraph = $variables['content']['#paragraph'];

  // Add border style class to card wrapper.
  $variables['attributes']['class'][] = $paragraph->getBehaviorSetting('react_paragraphs:card_variant_info', 'card_border_style', 'su-card-wrapper--border-regular');

  $card_info = [];

  // Add card type class to card wrapper. 3rd variable provides the default card type.
  $card_info['card_type'] = $paragraph->getBehaviorSetting('react_paragraphs:card_variant_info', 'card_type', 'su-card-wrapper--default');
  $variables['attributes']['class'][] = $card_info['card_type'];
}

/**
 * Implements hook_preprocess_banner().
 */
function chem_h_subtheme_preprocess_banner(&$variables) {

  $paragraph = $variables['content']['#paragraph'];

  // Add button color style class to card wrapper.
  $variables['attributes']['class'][] = $paragraph->getBehaviorSetting('react_paragraphs:banner_variant_info', 'banner_style', 'chemh-wrapper--banner-default');
}

/**
 * Implements hook_preprocess_HOOK().
 */
function chem_h_subtheme_preprocess_field__node__title__stanford_person(&$variables) {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['element']['#object'];
  $type_terms = [];
  $term_storage = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
  if ($node->hasField('su_person_type_group') && !$node->get('su_person_type_group')
      ->isEmpty()) {
    /** @var \Drupal\Core\Field\Plugin\Field\FieldType\EntityReferenceItem $field_item */
    foreach ($node->get('su_person_type_group') as $field_item) {
      try {
        $term_id = $field_item->get('target_id')->getString();
        $type_terms[] = $term_storage->load($term_id)->label();
      }
      catch (\Throwable $e) {
        continue;
      }
    }
  }
  $terms_to_display = 1;

  if ($type_terms && $variables['items'][0]['content']['#tag'] == 'h1') {
    $variables['items'][0]['content']['#attributes']['class'][] = 'order-last';
    $variables['items'][0]['content'] = [
      'title' => $variables['items'][0]['content'],
      'type' => [
        '#type' => 'html_tag',
        '#tag' => 'div',
        '#attributes' => [
          'class' => ['chem-h-person-type', 'order-first'],
        ],
        '#value' => implode(', ', array_slice($type_terms, 0, $terms_to_display)),
      ],
    ];
  }
}

/**
 * Implements hook_preprocess_paragraph__stanford_layout().
 */
function chem_h_subtheme_preprocess_paragraph__stanford_layout(array &$variables): void {
  /** @var \Drupal\paragraphs\Layout\Paragraph $paragraph */
  $paragraph = &$variables['paragraph'];
  $existing_classes = $variables['attributes']['class'] ?? [];
  $extra_classes = [
    $paragraph->getBehaviorSetting('react_paragraphs:layout_variant_info', 'padding_bottom'),
    $paragraph->getBehaviorSetting('react_paragraphs:layout_variant_info', 'section_color'),
  ];
  $variables['attributes']['class'] = array_merge($existing_classes, $extra_classes);
}

/**
 * Implements hook_preprocess_HOOK().
 */
function chem_h_subtheme_preprocess_pattern_events_card(&$variables){
  if (isset($variables['context']) && $variables['context'] instanceof PatternContext) {
    /** @var \Drupal\ui_patterns\Element\PatternContext $context */
    $context = $variables['context'];
    $node = $context->getProperty('entity');
    if ($node instanceof NodeInterface) {
      $variables['page_url'] = $node->toUrl()->toString();
    }
  }
}
